--ALTER SESSION SET "_oracle_script"=TRUE;
--CREATE USER CICLISMO IDENTIFIED BY CICLISMO;
--GRANT CONNECT, RESOURCE, DBA TO CICLISMO;


--EJERCICIO 1
CREATE OR REPLACE PACKAGE CICLISMO IS
PROCEDURE LISTADO;
FUNCTION DEVOLVERCARRERA (NOMBRE_EQUIPO VARCHAR2) RETURN NUMBER;
FUNCTION AGREGARCICLISTA (NOMBRE VARCHAR2, NACIONALIDAD_P VARCHAR2, FECHA DATE, CODIGO_EQUIPO NUMBER, NOMBRE_EQUIPO VARCHAR2) RETURN NUMBER;
FUNCTION ORDENAR RETURN NUMBER;
END CICLISMO;

CREATE OR REPLACE PACKAGE BODY CICLISMO IS 

PROCEDURE LISTADO
AS 
NUM_CICLISTAS NUMBER;
NUM_EQUIPOS NUMBER:=0;
CURSOR C IS 
	SELECT * FROM EQUIPOS;
CURSOR D (CODIGO_EQUIPO VARCHAR2) IS
	SELECT NOMBRE, FECHANACIMIENTO 
	FROM CICLISTAS
	WHERE CODEQUIPO = CODIGO_EQUIPO;

BEGIN 
	FOR registro IN C 
	LOOP
		NUM_EQUIPOS:=NUM_EQUIPOS+1;
		DBMS_OUTPUT.PUT_LINE('Nombre:' || registro.NOMBRE || ' Nacionalidad: ' || registro.NACIONALIDAD || ' Nombre del director: ' || registro.NOMBREDIRECTOR);
		FOR registro2 IN D (registro.CODEQUIPO)
		LOOP
			
			DBMS_OUTPUT.PUT_LINE('Nombre ciclista: ' ||  registro2.NOMBRE || ' Fecha de nacimiento: ' || registro2.FECHANACIMIENTO);
			DBMS_OUTPUT.PUT_LINE('---------------------------------------');
			

		
		
		END LOOP;
		SELECT COUNT(DORSAL) INTO NUM_CICLISTAS
			FROM CICLISTAS
			WHERE CODEQUIPO = registro.CODEQUIPO; 
		DBMS_OUTPUT.PUT_LINE('Nº Total de ciclistas en el equipo: ' || 	NUM_CICLISTAS);
	
	END LOOP;
	DBMS_OUTPUT.PUT_LINE('Nº Total de equipos en el listado: ' || NUM_EQUIPOS);
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('No se encontraron datos.');
	WHEN OTHERS THEN 
		DBMS_OUTPUT.PUT_LINE('Se ha producido una excepcion.');

END LISTADO;

CREATE OR REPLACE FUNCTION DEVOLVERCARRERA (NOMBRE_EQUIPO VARCHAR2) RETURN NUMBER
IS 
NUM_CARRERAS NUMBER:=0;
NUM NUMBER:=0;
NOEXISTE EXCEPTION;
BEGIN 
	SELECT COUNT(CODEQUIPO) INTO NUM
	FROM EQUIPOS
	WHERE NOMBRE=NOMBRE_EQUIPO;
	IF (NUM=0) THEN 
		RAISE NOEXISTE;
	ELSE
		SELECT COUNT(c.POSICION) INTO NUM_CARRERAS
		FROM CLASIFICACIONETAPAS c,CICLISTAS c2, EQUIPOS e 
		WHERE e.NOMBRE = NOMBRE_EQUIPO
		AND e.CODEQUIPO = c2.CODEQUIPO 
		AND c.DORSAL = c2.DORSAL
		AND c.POSICION ='1';
	
	END IF;
RETURN NUM_CARRERAS;
EXCEPTION
	WHEN NOEXISTE THEN 
		DBMS_OUTPUT.PUT_LINE('Error -200004. No existe este equipo.');
	WHEN OTHERS THEN 
		DBMS_OUTPUT.PUT_LINE('Se ha producido una excepcion.');	
	
END DEVOLVERCARRERA;

FUNCTION AGREGARCICLISTA (NOMBRE_P VARCHAR2, NACIONALIDAD_P VARCHAR2, FECHA DATE, CODIGO_EQUIPO NUMBER, NOMBRE_EQUIPO VARCHAR2) RETURN NUMBER
IS 
NUM_CICLISTA NUMBER:=0;
NUMERO_EQUIPO NUMBER:=0;
RESULTADO NUMBER:=0;
YAEXISTE EXCEPTION;
CREARLO EXCEPTION;
BEGIN 
	SELECT COUNT(c.DORSAL) INTO NUM_CICLISTA
	FROM CICLISTAS c, EQUIPOS e  
	WHERE c.CODEQUIPO = e.CODEQUIPO 
	AND c.NOMBRE = NOMBRE_P
	AND c.NACIONALIDAD = NACIONALIDAD_P
	AND c.FECHANACIMIENTO = FECHA 
	AND c.CODEQUIPO = CODIGO_EQUIPO
	AND e.NOMBRE = NOMBRE_EQUIPO;
	
	IF  (NUM_CICLISTA!=0) THEN
		RAISE YAEXISTE;
	ELSE
		SELECT COUNT(CODEQUIPO) INTO NUMERO_EQUIPO
		FROM EQUIPOS
		WHERE NOMBRE= NOMBRE_EQUIPO;
		
		IF (NUMERO_EQUIPO=0) THEN
		RAISE CREARLO;
		ELSE 
		
			IF (NACIONALIDAD_P IS NULL) THEN
				INSERT INTO CICLISTAS VALUES (DORSAL_CICLISTA.nextval, NACIONALIDAD_P, FECHA, CODIGO_EQUIPO, NOMBRE_EQUIPO);
				UPDATE CICLISTAS c
				SET NACIONALIDAD='ESPAÑOL'
				WHERE c.NOMBRE = NOMBRE_P
				AND c.NACIONALIDAD = NACIONALIDAD_P
				AND c.FECHANACIMIENTO = FECHA; 
				
			ELSE
				INSERT INTO CICLISTAS VALUES (DORSAL_CICLISTA.nextval, NACIONALIDAD_P, FECHA, CODIGO_EQUIPO, NOMBRE_EQUIPO);
				

			END IF;
		END IF;
	END IF;
SELECT c.DORSAL INTO RESULTADO
	FROM CICLISTAS c, EQUIPOS e  
	WHERE c.CODEQUIPO = e.CODEQUIPO 
	AND c.NOMBRE = NOMBRE_P
	AND c.NACIONALIDAD = NACIONALIDAD_P
	AND c.FECHANACIMIENTO = FECHA 
	AND c.CODEQUIPO = CODIGO_EQUIPO
	AND e.NOMBRE = NOMBRE_EQUIPO;

RETURN RESULTADO;

EXCEPTION
	WHEN YAEXISTE THEN
		DBMS_OUTPUT.PUT_LINE('Ya existe el ciclista.');
	WHEN CREARLO THEN 
		DBMS_OUTPUT.PUT_LINE('No existe el equipo, procedemos a crearlo.');
		INSERT INTO EQUIPOS(CODEQUIPO,NOMBRE,NACIONALIDAD) VALUES (CODIGO_EQUIPO, NOMBRE_EQUIPO, NACIONALIDAD_P);


END AGREGARCICLISTA;

FUNCTION ORDENAR RETURN NUMBER
IS 
CONTADOR NUMBER:=0;
CURSOR D IS 
	SELECT DISTINCT CODEQUIPO FROM EQUIPOS;
CURSOR C (CODIGO_EQUIPO NUMBER) IS 
	SELECT b.* 
	FROM (SELECT * FROM CICLISTAS 
	WHERE CODEQUIPO= CODIGO_EQUIPO
	ORDER BY NOMBRE)b
	WHERE ROWNUM<=2;

BEGIN 
	FOR registro IN D 
	LOOP
		FOR registro2 IN C (registro.CODEQUIPO)
		LOOP
			registro2.NACIONALIDAD:='Inglesa';
			CONTADOR:=CONTADOR+1;
			DBMS_OUTPUT.PUT_LINE('Codigo del equipo: ' || registro.CODEQUIPO);
			DBMS_OUTPUT.PUT_LINE('Dorsal del ciclista: ' || registro2.DORSAL);
			DBMS_OUTPUT.PUT_LINE('Nombre del ciclista: ' || registro2.NOMBRE);
			DBMS_OUTPUT.PUT_LINE('Nombre del ciclista: ' || registro2.NACIONALIDAD);

			DBMS_OUTPUT.PUT_LINE('--------------------');


			
		END LOOP;
		

	END LOOP;
RETURN CONTADOR;
	
EXCEPTION 
WHEN NO_DATA_FOUND THEN 
	RETURN -1;
WHEN OTHERS THEN
	RETURN -1;

END ORDENAR;
END CICLISMO;





----------------------------------------------------
--EJERCICIO 2
CREATE OR REPLACE PROCEDURE CICLISMO.LISTADO
AS 
NUM_CICLISTAS NUMBER;
NUM_EQUIPOS NUMBER:=0;
CURSOR C IS 
	SELECT * FROM EQUIPOS;
CURSOR D (CODIGO_EQUIPO VARCHAR2) IS
	SELECT NOMBRE, FECHANACIMIENTO 
	FROM CICLISTAS
	WHERE CODEQUIPO = CODIGO_EQUIPO;

BEGIN 
	FOR registro IN C 
	LOOP
		NUM_EQUIPOS:=NUM_EQUIPOS+1;
		DBMS_OUTPUT.PUT_LINE('Nombre:' || registro.NOMBRE || ' Nacionalidad: ' || registro.NACIONALIDAD || ' Nombre del director: ' || registro.NOMBREDIRECTOR);
		FOR registro2 IN D (registro.CODEQUIPO)
		LOOP
			
			DBMS_OUTPUT.PUT_LINE('Nombre ciclista: ' ||  registro2.NOMBRE || ' Fecha de nacimiento: ' || registro2.FECHANACIMIENTO);
			DBMS_OUTPUT.PUT_LINE('---------------------------------------');
			

		
		
		END LOOP;
		SELECT COUNT(DORSAL) INTO NUM_CICLISTAS
			FROM CICLISTAS
			WHERE CODEQUIPO = registro.CODEQUIPO; 
		DBMS_OUTPUT.PUT_LINE('Nº Total de ciclistas en el equipo: ' || 	NUM_CICLISTAS);
	
	END LOOP;
	DBMS_OUTPUT.PUT_LINE('Nº Total de equipos en el listado: ' || NUM_EQUIPOS);
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('No se encontraron datos.');
	WHEN OTHERS THEN 
		DBMS_OUTPUT.PUT_LINE('Se ha producido una excepcion.');

END;



BEGIN 
	LISTADO();
END;


CREATE OR REPLACE FUNCTION CICLISMO.ORDENAR RETURN NUMBER
IS 
CONTADOR NUMBER:=0;
CURSOR D IS 
	SELECT DISTINCT CODEQUIPO FROM EQUIPOS;
CURSOR C (CODIGO_EQUIPO NUMBER) IS 
	SELECT b.* 
	FROM (SELECT * FROM CICLISTAS 
	WHERE CODEQUIPO= CODIGO_EQUIPO
	ORDER BY NOMBRE)b
	WHERE ROWNUM<=2;

BEGIN 
	FOR registro IN D 
	LOOP
		FOR registro2 IN C (registro.CODEQUIPO)
		LOOP
			registro2.NACIONALIDAD:='Inglesa';
			CONTADOR:=CONTADOR+1;
			DBMS_OUTPUT.PUT_LINE('Codigo del equipo: ' || registro.CODEQUIPO);
			DBMS_OUTPUT.PUT_LINE('Dorsal del ciclista: ' || registro2.DORSAL);
			DBMS_OUTPUT.PUT_LINE('Nombre del ciclista: ' || registro2.NOMBRE);
			DBMS_OUTPUT.PUT_LINE('Nombre del ciclista: ' || registro2.NACIONALIDAD);

			DBMS_OUTPUT.PUT_LINE('--------------------');


			
		END LOOP;
		

	END LOOP;
RETURN CONTADOR;
	
EXCEPTION 
WHEN NO_DATA_FOUND THEN 
	RETURN -1;
WHEN OTHERS THEN
	RETURN -1;

	
END;
----------------------------------------------------------
--EJERCICIO 2;
CREATE OR REPLACE FUNCTION CICLISMO.DEVOLVERCARRERA (NOMBRE_EQUIPO VARCHAR2) RETURN NUMBER
IS 
NUM_CARRERAS NUMBER:=0;
NUM NUMBER:=0;
NOEXISTE EXCEPTION;
BEGIN 
	SELECT COUNT(CODEQUIPO) INTO NUM
	FROM EQUIPOS
	WHERE NOMBRE=NOMBRE_EQUIPO;
	IF (NUM=0) THEN 
		RAISE NOEXISTE;
	ELSE
		SELECT COUNT(c.POSICION) INTO NUM_CARRERAS
		FROM CLASIFICACIONETAPAS c,CICLISTAS c2, EQUIPOS e 
		WHERE e.NOMBRE = NOMBRE_EQUIPO
		AND e.CODEQUIPO = c2.CODEQUIPO 
		AND c.DORSAL = c2.DORSAL
		AND c.POSICION ='1';
	
	END IF;
RETURN NUM_CARRERAS;
EXCEPTION
	WHEN NOEXISTE THEN 
		DBMS_OUTPUT.PUT_LINE('Error -200004. No existe este equipo.');
	WHEN OTHERS THEN 
		DBMS_OUTPUT.PUT_LINE('Se ha producido una excepcion.');	
	
END;

SELECT DEVOLVERCARRERA('Reynolds') FROM DUAL;
SELECT DEVOLVERCARRERA('Paco') FROM DUAL;

--EJERCICIO 3
CREATE OR REPLACE FUNCTION CICLISMO.AGREGARCICLISTA (NOMBRE_P VARCHAR2, NACIONALIDAD_P VARCHAR2, FECHA DATE, CODIGO_EQUIPO NUMBER, NOMBRE_EQUIPO VARCHAR2) RETURN NUMBER
IS 
NUM_CICLISTA NUMBER:=0;
NUMERO_EQUIPO NUMBER:=0;
RESULTADO NUMBER:=0;
YAEXISTE EXCEPTION;
CREARLO EXCEPTION;
BEGIN 
	SELECT COUNT(c.DORSAL) INTO NUM_CICLISTA
	FROM CICLISTAS c, EQUIPOS e  
	WHERE c.CODEQUIPO = e.CODEQUIPO 
	AND c.NOMBRE = NOMBRE_P
	AND c.NACIONALIDAD = NACIONALIDAD_P
	AND c.FECHANACIMIENTO = FECHA 
	AND c.CODEQUIPO = CODIGO_EQUIPO
	AND e.NOMBRE = NOMBRE_EQUIPO;
	
	IF  (NUM_CICLISTA!=0) THEN
		RAISE YAEXISTE;
	ELSE
		SELECT COUNT(CODEQUIPO) INTO NUMERO_EQUIPO
		FROM EQUIPOS
		WHERE NOMBRE= NOMBRE_EQUIPO;
		
		IF (NUMERO_EQUIPO=0) THEN
		RAISE CREARLO;
		ELSE 
		
			IF (NACIONALIDAD_P IS NULL) THEN
				INSERT INTO CICLISTAS VALUES (DORSAL_CICLISTA.nextval, NACIONALIDAD_P, FECHA, CODIGO_EQUIPO, NOMBRE_EQUIPO);
				UPDATE CICLISTAS c
				SET NACIONALIDAD='ESPAÑOL'
				WHERE c.NOMBRE = NOMBRE_P
				AND c.NACIONALIDAD = NACIONALIDAD_P
				AND c.FECHANACIMIENTO = FECHA; 
				
			ELSE
				INSERT INTO CICLISTAS VALUES (DORSAL_CICLISTA.nextval, NACIONALIDAD_P, FECHA, CODIGO_EQUIPO, NOMBRE_EQUIPO);
				

			END IF;
		END IF;
	END IF;
SELECT c.DORSAL INTO RESULTADO
	FROM CICLISTAS c, EQUIPOS e  
	WHERE c.CODEQUIPO = e.CODEQUIPO 
	AND c.NOMBRE = NOMBRE_P
	AND c.NACIONALIDAD = NACIONALIDAD_P
	AND c.FECHANACIMIENTO = FECHA 
	AND c.CODEQUIPO = CODIGO_EQUIPO
	AND e.NOMBRE = NOMBRE_EQUIPO;

RETURN RESULTADO;

EXCEPTION
	WHEN YAEXISTE THEN
		DBMS_OUTPUT.PUT_LINE('Ya existe el ciclista.');
	WHEN CREARLO THEN 
		DBMS_OUTPUT.PUT_LINE('No existe el equipo, procedemos a crearlo.');
		INSERT INTO EQUIPOS(CODEQUIPO,NOMBRE,NACIONALIDAD) VALUES (CODIGO_EQUIPO, NOMBRE_EQUIPO, NACIONALIDAD_P);


END;

SELECT AGREGARCICLISTA('LUCIA','DOMINICANA','19/JAN/1990',12,'Reynolds') FROM DUAL;



CREATE SEQUENCE DORSAL_CICLISTA
START WITH 17
INCREMENT BY 1;

--EJERCICIO 4
CREATE OR REPLACE FUNCTION CICLISMO.ORDENAR RETURN NUMBER
IS 
CONTADOR NUMBER:=0;
CURSOR D IS 
	SELECT DISTINCT CODEQUIPO FROM EQUIPOS;
CURSOR C (CODIGO_EQUIPO NUMBER) IS 
	SELECT b.* 
	FROM (SELECT * FROM CICLISTAS 
	WHERE CODEQUIPO= CODIGO_EQUIPO
	ORDER BY NOMBRE)b
	WHERE ROWNUM<=2;

BEGIN 
	FOR registro IN D 
	LOOP
		FOR registro2 IN C (registro.CODEQUIPO)
		LOOP
			registro2.NACIONALIDAD:='Inglesa';
			CONTADOR:=CONTADOR+1;
			DBMS_OUTPUT.PUT_LINE('Codigo del equipo: ' || registro.CODEQUIPO);
			DBMS_OUTPUT.PUT_LINE('Dorsal del ciclista: ' || registro2.DORSAL);
			DBMS_OUTPUT.PUT_LINE('Nombre del ciclista: ' || registro2.NOMBRE);
			DBMS_OUTPUT.PUT_LINE('Nombre del ciclista: ' || registro2.NACIONALIDAD);

			DBMS_OUTPUT.PUT_LINE('--------------------');


			
		END LOOP;
		

	END LOOP;
RETURN CONTADOR;
	
EXCEPTION 
WHEN NO_DATA_FOUND THEN 
	RETURN -1;
WHEN OTHERS THEN
	RETURN -1;

	
END;

DECLARE 
	RESULTADO NUMBER:=0;
BEGIN
	SELECT ORDENAR() INTO RESULTADO FROM DUAL;
	DBMS_OUTPUT.PUT_LINE(RESULTADO);
END;



SELECT * FROM CICLISTAS ORDER BY NOMBRE;

UPDATE CICLISTAS 
			SET NACIONALIDAD = 'Inglesa'
			WHERE CODEQUIPO = 3;




